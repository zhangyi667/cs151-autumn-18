#lang typed/racket
(require typed/test-engine/racket-tests)
(require "../include/cs151-core.rkt")

;; assign-plane: generates recommended plane to fit given number of passengers
(: assign-plane : Integer -> String)
(define (assign-plane people)
  (string-append
   "Recommendation: "
   (cond
     [(< people 0) (error "assign-plane: cannot have negative passengers")]
     [(= people 0) "cancel flight"]
     [(<= people 128) "319"]
     [(<= people 150) "320"]
     [(<= people 166) "737-800"]
     [(<= people 179) "737-900"]
     [(<= people 213) "757"]
     [(<= people 242) "767"]
     [(<= people 366) "777"]
     [else "split flights"])))
 
(check-error (assign-plane -10) "assign-plane: cannot have negative passengers")
(check-expect (assign-plane 0) "Recommendation: cancel flight")
(check-expect (assign-plane 200) "Recommendation: 757")
(check-expect (assign-plane 400) "Recommendation: split flights")

(define-struct FlightHistory
  ([segments : Integer]
   [miles    : Integer]))

;; miles-earned: given number of flights and miles in the past year,
;; determine membership and calculate number of miles to be credited
(: miles-earned : FlightHistory -> Integer)
(define (miles-earned p)
  (cond
    [(or (< (FlightHistory-segments p) 0) (< (FlightHistory-miles p) 0))
     (error "miles-earned: negative input given")]
    [(or (>= (FlightHistory-segments p) 50) (>= (FlightHistory-miles p) 70000))
     (* 2 (FlightHistory-miles p))]
    [(or (>= (FlightHistory-segments p) 25) (>= (FlightHistory-miles p) 35000))
     (exact-ceiling (* 5/4 (FlightHistory-miles p)))]
    [else (FlightHistory-miles p)]))

(check-error (miles-earned (make-FlightHistory -10 0)) "miles-earned: negative input given")
(check-expect (miles-earned (make-FlightHistory 20 10000)) 10000)
(check-expect (miles-earned (make-FlightHistory 25 10000)) 12500)
(check-expect (miles-earned (make-FlightHistory 20 75000)) 150000)

     
(test)